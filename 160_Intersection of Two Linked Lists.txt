160. Intersection of Two Linked Lists

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        def find_length(node):
            len = 0
            while node:
                len += 1
                node = node.next
            return len
        a = find_length(headA)
        b = find_length(headB)

        while a > b:
            headA = headA.next
            a-=1
        while b > a:
            headB =headB.next
            b -= 1
        
        while headA and headB:
            if headA == headB:
                return headA
            headA = headA.next
            headB = headB.next
       
        

	#alternative solution
        # a = headA
        # b = headB
        # while a!=b:
        #     a = a.next if a else headB
        #     b = b.next if b else headA
        # return a
        